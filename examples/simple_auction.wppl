var init = function(){
globalStore.n1 = 1;
globalStore.n4 = 0;
globalStore.n3 = 0;
globalStore.n2 = 0;

globalStore.enabled_n8 = false; // expire
globalStore.enabled_n9 = false; // thresh
globalStore.enabled_n6 = false; // bid
globalStore.enabled_n7 = false; // dec
globalStore.enabled_n5 = false; // init

globalStore.fired_n8 = 0;
globalStore.fired_n9 = 0;
globalStore.fired_n6 = 0;
globalStore.fired_n7 = 0;
globalStore.fired_n5 = 0;

globalStore.vars = { t : {'maxValue': 100000.0, 'minValue': 0.0, 'type': 'java.lang.Double'}, o : {'maxValue': 100000.0, 'minValue': 0.0, 'type': 'java.lang.Double'} };

globalStore.t = 0;
globalStore.o = 0;
}

var update_enabled_n8 = function() {
if(globalStore.n3 > 0 && globalStore.t<=0&&globalStore.o>0 && globalStore.n2 > 0 && globalStore.t<=0&&globalStore.o>0) {
if (!globalStore.enabled_n8) {
globalStore.enabled_n8 = true;
}
} else {
if (globalStore.enabled_n8) {
globalStore.enabled_n8 = false;
}
}
}

var update_enabled_n9 = function() {
if(globalStore.n3 > 0 && globalStore.o>1000) {
if (!globalStore.enabled_n9) {
globalStore.enabled_n9 = true;
}
} else {
if (globalStore.enabled_n9) {
globalStore.enabled_n9 = false;
}
}
}

var update_enabled_n6 = function() {
if(globalStore.n3 > 0 && globalStore.t>0) {
if (!globalStore.enabled_n6) {
globalStore.enabled_n6 = true;
}
} else {
if (globalStore.enabled_n6) {
globalStore.enabled_n6 = false;
}
}
}

var update_enabled_n7 = function() {
if(globalStore.n2 > 0 && globalStore.t>0) {
if (!globalStore.enabled_n7) {
globalStore.enabled_n7 = true;
}
} else {
if (globalStore.enabled_n7) {
globalStore.enabled_n7 = false;
}
}
}

var update_enabled_n5 = function() {
if(globalStore.n1 > 0) {
if (!globalStore.enabled_n5) {
globalStore.enabled_n5 = true;
}
} else {
if (globalStore.enabled_n5) {
globalStore.enabled_n5 = false;
}
}
}


var fire_n8 = function() {
globalStore.n3 = globalStore.n3 - 1;

globalStore.n2 = globalStore.n2 - 1;
globalStore.n4 = globalStore.n4 + 1;

globalStore.fired_n8 = globalStore.fired_n8 + 1;



update_enabled_n6();
update_enabled_n9();
update_enabled_n8();
update_enabled_n7();
}


var fire_n9 = function() {
globalStore.n3 = globalStore.n3 - 1;
globalStore.n4 = globalStore.n4 + 1;

globalStore.fired_n9 = globalStore.fired_n9 + 1;



update_enabled_n6();
update_enabled_n9();
update_enabled_n8();
}


var fire_n6 = function() {
globalStore.n3 = globalStore.n3 - 1;
globalStore.n3 = globalStore.n3 + 1;

globalStore.fired_n6 = globalStore.fired_n6 + 1;

var old_var_o = globalStore.o;
globalStore.o = uniform({a: globalStore.vars['o']['minValue'], b: globalStore.vars['o']['maxValue']});
condition(globalStore.o>old_var_o);

update_enabled_n6();
update_enabled_n9();
update_enabled_n8();
}


var fire_n7 = function() {
globalStore.n2 = globalStore.n2 - 1;
globalStore.n2 = globalStore.n2 + 1;

globalStore.fired_n7 = globalStore.fired_n7 + 1;

var old_var_t = globalStore.t;
globalStore.t = uniform({a: globalStore.vars['t']['minValue'], b: globalStore.vars['t']['maxValue']});
condition(globalStore.t<old_var_t);

update_enabled_n8();
update_enabled_n7();
}


var fire_n5 = function() {
globalStore.n1 = globalStore.n1 - 1;
globalStore.n3 = globalStore.n3 + 1;

globalStore.n2 = globalStore.n2 + 1;

globalStore.fired_n5 = globalStore.fired_n5 + 1;

var old_var_t = globalStore.t;
globalStore.t = uniform({a: globalStore.vars['t']['minValue'], b: globalStore.vars['t']['maxValue']});
var old_var_o = globalStore.o;
globalStore.o = 0;
condition(globalStore.t>0&&globalStore.o==0);

update_enabled_n9();
update_enabled_n5();
update_enabled_n6();
update_enabled_n8();
update_enabled_n7();
}

var simulator_loop = function(steps) {

if (steps <= 0) {
return;
}

var enabledTransitions = filter(function(x) {
return (x == 0 && globalStore.enabled_n8)||
(x == 1 && globalStore.enabled_n9)||
(x == 2 && globalStore.enabled_n6)||
(x == 3 && globalStore.enabled_n7)||
(x == 4 && globalStore.enabled_n5);
}, [0, 1, 2, 3, 4]);

if (enabledTransitions.length == 0) {
return;
}

var transition = sample(Categorical({vs: enabledTransitions}));

if (transition == 0) {
fire_n8();
}
else if (transition == 1) {
fire_n9();
}
else if (transition == 2) {
fire_n6();
}
else if (transition == 3) {
fire_n7();
}
else if (transition == 4) {
fire_n5();
}
else {
print("Selected illegal transition; should never happen.");
}
simulator_loop(steps - 1);
}

var simulator = function(){
init();
update_enabled_n8();
update_enabled_n9();
update_enabled_n6();
update_enabled_n7();
update_enabled_n5();

simulator_loop(100);

return globalStore.n4 > 0;
}

var dist = Infer({
method: 'MCMC', 
samples: 50000,
},simulator);

dist